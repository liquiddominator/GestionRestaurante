<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Restaurante Gourmet</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/headerFooter.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    @RenderSection("Styles", required: false)
</head>
<body class="@(ViewData["HideHeaderAndFooter"] != null && (bool)ViewData["HideHeaderAndFooter"] ? "auth-page" : "")">
    @if (!(ViewData["HideHeaderAndFooter"] as bool? ?? false))
    {
        <!-- Sidebar -->
        <nav class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <img src="~/images/logo.png" alt="Logo" class="logo-img" />
                <h5 class="text-white">Restaurante Gourmet</h5>
            </div>
            <ul class="nav flex-column mt-4">
                @if (User.IsInRole("administrador") || User.IsInRole("personal") || User.IsInRole("cliente"))
                {
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Items" asp-action="Index">
                            <i class="fas fa-utensils"></i> <span>Menú</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="CategoriasMenu" asp-action="Index">
                            <i class="fas fa-list"></i> <span>Categorías</span>
                        </a>
                    </li>
                }

                @if (User.IsInRole("administrador") || User.IsInRole("personal"))
                {
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="collapse" href="#gestionSubmenu">
                            <i class="fas fa-cogs"></i> <span>Gestión</span>
                            <i class="fas fa-chevron-down float-end"></i>
                        </a>
                        <div class="collapse" id="gestionSubmenu">
                            <ul class="nav flex-column">
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Recetas" asp-action="Index">
                                        <i class="fas fa-book-open"></i> <span>Recetas</span>
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Inventarios" asp-action="Index">
                                        <i class="fas fa-box"></i> <span>Inventario</span>
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Compras" asp-action="Index">
                                        <i class="fas fa-shopping-cart"></i> <span>Compras</span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </li>
                }

                @if (User.IsInRole("administrador") || User.IsInRole("personal") || User.IsInRole("cliente"))
                {
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Reservas" asp-action="Index">
                            <i class="fas fa-calendar-alt"></i> <span>Reservas</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Pedidos" asp-action="Index">
                            <i class="fas fa-clipboard-list"></i> <span>Pedidos</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="DetallesPedidos" asp-action="Index">
                            <i class="fas fa-file-alt"></i> <span>Detalles Pedidos</span>
                        </a>
                    </li>
                }

                @if (User.IsInRole("administrador"))
                {
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Usuarios" asp-action="Index">
                            <i class="fas fa-users-cog"></i> <span>Administrar Usuarios</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Dashboard" asp-action="Index">
                            <i class="fas fa-users-cog"></i> <span>Dashboard</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>

        <!-- Main Content -->
        <div class="main-content" id="main-content">
            <div class="top-header">
                <div class="header-content">
                    <!-- Left side - Title -->
                    <div class="page-title">
                        <h4 class="mb-0">@ViewData["Title"]</h4>
                    </div>
            
                    <!-- Right side - User Menu -->
                    <div class="user-menu">
                        <div class="carrito-icon me-4">
                            <button type="button" class="btn btn-link position-relative" id="btnCarrito">
                                <i class="fas fa-shopping-cart fa-lg"></i>
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="carritoCount">
                                    0
                                </span>
                            </button>
                        </div>
                        <div class="user-info">
                            <i class="fas fa-user-circle me-2"></i>
                            <span class="user-name">@User.Identity?.Name</span>
                            <form asp-controller="Auth" asp-action="Logout" method="post" class="d-inline ms-3">
                                <button type="submit" class="logout-btn">
                                    <i class="fas fa-sign-out-alt"></i> Cerrar Sesión
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
    
            <div class="container">
                @RenderBody()
            </div>
        </div>

        <!-- Modal del Carrito -->
        <div class="modal fade" id="carritoModal" tabindex="-1" aria-labelledby="carritoModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div id="carritoContent">
                    <!-- El contenido del carrito se cargará aquí -->
                </div>
            </div>
        </div>

        <style>
            .top-header {
                background-color: white;
                box-shadow: 0 2px 8px rgba(0,0,0,0.05);
                padding: 1rem 2rem;
                margin-bottom: 2rem;
                border-radius: 0.5rem;
                position: sticky; /* Cambiamos a sticky */
                top: 0; /* Se mantiene en la parte superior */
                z-index: 1000; /* Aseguramos que esté por encima de otros elementos */
            }

            .container {
                padding-top: 1rem; /* Añadimos un poco de espacio superior */
            }

            .header-content {
                display: flex;
                justify-content: space-between;
                align-items: center;
                width: 100%;
            }

            .page-title h4 {
                color: var(--text-color);
                font-weight: 600;
            }

            .user-menu {
                display: flex;
                align-items: center;
                justify-content: flex-end;
                flex-grow: 1;
            }

            .user-info {
                display: flex;
                align-items: center;
                color: var(--text-color);
            }

            .user-name {
                font-weight: 500;
            }

            .logout-btn {
                margin-left: 1rem;
                background: none;
                border: none;
                color: var(--text-color);
                padding: 0.5rem 1rem;
                border-radius: 0.5rem;
                transition: all 0.3s ease;
            }

            .logout-btn:hover {
                background-color: #f8f9fa;
                color: var(--primary-color);
            }

            .carrito-icon button {
                color: var(--text-color);
                transition: all 0.3s ease;
            }

            .carrito-icon button:hover {
                color: var(--primary-color);
            }

            

            @@media (max-width: 768px) {
                .top-header {
                    padding: 1rem;
                }

                .user-name {
                    max-width: 120px;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                }
                /* Ajustamos el padding en móviles */
                .container {
                    padding-top: 0.5rem;
                }
            }
        </style>

        <footer class="app-footer" id="appFooter">
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        &copy; 2024 - Restaurante Gourmet - Todos los derechos reservados
                    </div>
                    <div class="col-md-6 text-md-end">
                        <a asp-controller="Home" asp-action="Privacy">Política de Privacidad</a>
                    </div>
                </div>
            </div>
        </footer>
    }
    else
    {
        <div class="container">
            @RenderBody()
        </div>
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Script del Carrito -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const btnCarrito = document.getElementById('btnCarrito');
            const carritoModal = new bootstrap.Modal(document.getElementById('carritoModal'));

            function actualizarCarrito() {
                fetch('/Carrito/ObtenerCarrito')
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById('carritoContent').innerHTML = html;
                        actualizarContadorCarrito();
                    });
            }

            function actualizarContadorCarrito() {
                fetch('/Carrito/ObtenerContador')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('carritoCount').textContent = data.count;
                    });
            }

            btnCarrito.addEventListener('click', function () {
                actualizarCarrito();
                carritoModal.show();
            });

            // Modificamos la delegación de eventos para capturar mejor los clics
            document.getElementById('carritoContent').addEventListener('click', function (e) {
                // Encuentra el botón más cercano si se hizo clic en un ícono
                const targetButton = e.target.closest('.btn-eliminar-pedido, .btn-delete');

                if (!targetButton) return;

                // Manejo de eliminar pedido
                if (targetButton.classList.contains('btn-eliminar-pedido')) {
                    const pedidoId = targetButton.dataset.pedidoId;
                    if (confirm('¿Estás seguro de que deseas eliminar este pedido?')) {
                        fetch(`/Carrito/EliminarPedido/${pedidoId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        })
                            .then(response => {
                                if (response.ok) {
                                    actualizarCarrito();
                                } else {
                                    alert('Error al eliminar el pedido');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('Error al eliminar el pedido');
                            });
                    }
                }

                // Manejo de eliminar detalle
                if (targetButton.classList.contains('btn-delete')) {
                    const detalleId = targetButton.dataset.detalleId;
                    const pedidoId = targetButton.dataset.pedidoId;
                    if (confirm('¿Estás seguro de que deseas eliminar este item?')) {
                        fetch('/Carrito/EliminarDetalle', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify({ idDetalle: detalleId, idPedido: pedidoId })
                        })
                            .then(response => {
                                if (response.ok) {
                                    actualizarCarrito();
                                } else {
                                    alert('Error al eliminar el detalle');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('Error al eliminar el detalle');
                            });
                    }
                }
            });

            actualizarContadorCarrito();
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
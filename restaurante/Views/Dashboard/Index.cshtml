@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid p-4">
	<div class="dashboard-header position-relative mb-5 p-4 rounded-4 bg-gradient">
		<div class="row align-items-center">
			<div class="col-lg-8">
				<h1 class="display-4 mb-0 fw-bold header-title">Dashboard</h1>
				<p class="header-subtitle mb-0 mt-2">Panel de Control</p>
			</div>
			<div class="col-lg-4 text-lg-end">
				<div class="current-date p-3 rounded-3 d-inline-block">
					<i class="fas fa-calendar-alt me-2"></i>
					<span>@DateTime.Now.ToString("dddd, dd MMMM yyyy")</span>
				</div>
			</div>
		</div>
	</div>

	<style>
.dashboard-header {
    background: linear-gradient(45deg, #e8e9ec, #ffffff);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.header-title {
    color: #2c3e50;
}

.header-subtitle {
    color: #34495e;
}

.current-date {
    background-color: #2c3e50;
    color: #ffffff;
}
</style>

    <div class="row g-4 mb-4">
        <div class="col-12 col-lg-8">
            <div class="card border-0 shadow-lg h-100">
                <div class="card-header bg-white border-0 py-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0 fw-bold">
                            <i class="fas fa-chart-line text-primary me-2"></i>
                            Ventas vs Compras (Últimos 30 días)
                        </h5>
                        <div class="chart-period">
                            <select class="form-select form-select-sm">
                                <option>Últimos 30 días</option>
                                <option>Últimos 7 días</option>
                                <option>Este mes</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <canvas id="ventasComprasChart" height="300"></canvas>
                </div>
            </div>
        </div>
        <div class="col-12 col-lg-4">
            <div class="card border-0 shadow-lg h-100">
                <div class="card-header bg-white border-0 py-4">
                    <h5 class="card-title mb-0 fw-bold">
                        <i class="fas fa-chart-pie text-success me-2"></i>
                        Ocupación de Mesas
                    </h5>
                </div>
                <div class="card-body d-flex align-items-center justify-content-center p-4">
                    <canvas id="ocupacionChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4">
        <div class="col-12 col-md-6">
            <div class="card border-0 shadow-lg h-100">
                <div class="card-header bg-white border-0 py-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0 fw-bold">
                            <i class="fas fa-trophy text-warning me-2"></i>
                            Top 5 Platos Más Vendidos
                        </h5>
                    </div>
                </div>
                <div class="card-body p-4">
                    <canvas id="platosChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-6">
            <div class="card border-0 shadow-lg h-100">
                <div class="card-header bg-white border-0 py-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0 fw-bold">
                            <i class="fas fa-chart-area text-info me-2"></i>
                            Tendencia de Ventas
                        </h5>
                        <div class="btn-group">
                            <button class="btn btn-sm btn-outline-primary active">Diario</button>
                            <button class="btn btn-sm btn-outline-primary">Semanal</button>
                            <button class="btn btn-sm btn-outline-primary">Mensual</button>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <canvas id="tendenciaVentasChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .dashboard-header {
        background: linear-gradient(45deg, #4e73df, #224abe);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-radius: 12px;
        overflow: hidden;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1) !important;
        }

    .chart-period .form-select {
        border-radius: 20px;
        padding: 0.375rem 2rem 0.375rem 1rem;
        border-color: #e3e6f0;
        cursor: pointer;
    }

    .btn-group .btn {
        border-radius: 20px;
    }

        .btn-group .btn:not(:last-child) {
            margin-right: 5px;
        }

    .card-header {
        border-bottom: 1px solid rgba(0,0,0,.05);
    }

    canvas {
        padding: 10px;
    }
</style>

@section Scripts {
	<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js"></script>
    <script>
        const colors = {
            primary: '#4e73df',
            success: '#1cc88a',
            info: '#36b9cc',
            warning: '#f6c23e',
            danger: '#e74a3b',
            secondary: '#858796',
            light: '#f8f9fc',
            dark: '#5a5c69'
        };

        // Gráfico combinado de Ventas y Compras
        new Chart(document.getElementById('ventasComprasChart'), {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.FechasPedidos)),
                datasets: [{
                    label: 'Ventas',
                    data: @Html.Raw(Json.Serialize(ViewBag.TotalesPedidos)),
                    borderColor: colors.primary,
                    backgroundColor: 'rgba(78, 115, 223, 0.1)',
                    fill: true
                }, {
                    label: 'Compras',
                    data: @Html.Raw(Json.Serialize(ViewBag.TotalesCompras)),
                    borderColor: colors.success,
                    backgroundColor: 'rgba(28, 200, 138, 0.1)',
                    fill: true
                }]
            },
            options: {
                responsive: true,
                interaction: {
                    intersect: false,
                    mode: 'index'
                },
                plugins: {
                    legend: {
                        position: 'top'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value) {
                                return '$ ' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });

        // Gráfico de Ocupación (Dona)
        new Chart(document.getElementById('ocupacionChart'), {
            type: 'doughnut',
            data: {
                labels: ['Ocupadas', 'Disponibles'],
                datasets: [{
                    data: @Html.Raw(Json.Serialize(ViewBag.OcupacionMesas)),
                    backgroundColor: [colors.primary, colors.light],
                    borderColor: [colors.primary, colors.secondary],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                cutout: '75%',
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                let total = context.dataset.data.reduce((a, b) => a + b, 0);
                                let percentage = Math.round((context.raw / total) * 100);
                                return `${context.label}: ${context.raw} (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });

        // Gráfico de Platos Más Vendidos (Horizontal)
        new Chart(document.getElementById('platosChart'), {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.NombresPlatos)),
                datasets: [{
                    label: 'Unidades vendidas',
                    data: @Html.Raw(Json.Serialize(ViewBag.CantidadesPlatos)),
                    backgroundColor: colors.info,
                    borderRadius: 4
                }]
            },
            options: {
                indexAxis: 'y',
                responsive: true,
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });

        // Gráfico de Tendencia de Ventas
        new Chart(document.getElementById('tendenciaVentasChart'), {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.FechasPedidos)),
                datasets: [{
                    label: 'Ventas diarias',
                    data: @Html.Raw(Json.Serialize(ViewBag.TotalesPedidos)),
                    borderColor: colors.warning,
                    backgroundColor: 'rgba(246, 194, 62, 0.1)',
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value) {
                                return '$ ' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });
        @Html.Raw(Model)

                // Inicializar tooltips de Bootstrap
                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}